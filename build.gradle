buildscript {
    repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.vk.taskplanner'
version = '1.0.0-SNAPSHOT'
//
//bootJar {
//    baseName = 'sample-vk99'
//    version =  '0.1.0'
//}

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") 
    testCompile("org.springframework.boot:spring-boot-starter-test")

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compile "commons-io:commons-io:2.6"
    compile "org.apache.httpcomponents:httpclient:4.5.3"

    testCompile 'io.cucumber:cucumber-java:6.5.0'
    testCompile 'io.cucumber:cucumber-junit:6.5.0'
    testCompile 'junit:junit:4.13'

    compile group: 'joda-time', name: 'joda-time', version: '2.10.6'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.vk.planner', 'src/test/resources']
        }
    }
}

